/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import ClasesConcretass.PagoTarjeta;
import ClasesConcretass.PagoPayPal;
import ClasesConcretass.PagoCripto;
import Excepciones.DatosInvalidosException;
import Excepciones.MontoInvalidoException;
import Pagoss.Pago;
import Prueba.ValidadorDePago;
/**
 *
 * Interfaz gráfica para el sistema de pagos que permite seleccionar el método de pago e ingresar los datos necesarios
 *
 * @author Luisa Arango
 * @version 1.0
 */
public class SistemaDePagosGUI extends javax.swing.JFrame {
    

     /** Creates new form SistemaDePagosGUI
     */
    public SistemaDePagosGUI() {
        initComponents();

        ocultarCamposEspecificos();
        mostrarCamposEspecificos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        metodoPagoComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        montoTextField = new javax.swing.JTextField();
        numeroTarjetaLabel = new javax.swing.JLabel();
        numeroTarjetaTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        direccionCriptoLabel = new javax.swing.JLabel();
        direccionCriptoTextField = new javax.swing.JTextField();
        pagarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultadoTextArea = new javax.swing.JTextArea();
        fechaVencimientoLabel = new javax.swing.JLabel();
        fechaVencimientoTextField = new javax.swing.JTextField();
        cvvLabel = new javax.swing.JLabel();
        cvvTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Métodos de pago: ");

        metodoPagoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tarjeta", "PayPal", "Cripto" }));
        metodoPagoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoPagoComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Monto: ");

        numeroTarjetaLabel.setText("Número de tarjeta:");

        emailLabel.setText("Email:");

        passwordLabel.setText("Contraseña: ");

        direccionCriptoLabel.setText("Dirección Cripto: ");

        pagarButton.setText("Pagar ");
        pagarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarButtonActionPerformed(evt);
            }
        });

        resultadoTextArea.setColumns(20);
        resultadoTextArea.setRows(5);
        jScrollPane1.setViewportView(resultadoTextArea);

        fechaVencimientoLabel.setText("Fecha vencimiento: ");

        cvvLabel.setText("CVV: ");

        cvvTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cvvTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel1))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pagarButton)
                            .addComponent(metodoPagoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numeroTarjetaLabel)
                                    .addComponent(emailLabel)
                                    .addComponent(passwordLabel)
                                    .addComponent(direccionCriptoLabel)
                                    .addComponent(fechaVencimientoLabel)
                                    .addComponent(cvvLabel))
                                .addGap(18, 18, 18)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numeroTarjetaTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(emailTextField)
                                    .addComponent(passwordField)
                                    .addComponent(direccionCriptoTextField)
                                    .addComponent(fechaVencimientoTextField)
                                    .addComponent(cvvTextField)))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(82, 82, 82)
                                .addComponent(montoTextField))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(metodoPagoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(montoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroTarjetaLabel)
                    .addComponent(numeroTarjetaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direccionCriptoLabel)
                    .addComponent(direccionCriptoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaVencimientoLabel)
                    .addComponent(fechaVencimientoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cvvLabel)
                    .addComponent(cvvTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(pagarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel2.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     /**
     * Maneja el evento de cambio en el ComboBox del método de pago, mostrando los campos específicos para el método seleccionado
     * @param evt El evento de acción
     */
    private void metodoPagoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoPagoComboBoxActionPerformed
        // TODO add your handling code here:
           mostrarCamposEspecificos();
    }//GEN-LAST:event_metodoPagoComboBoxActionPerformed

    private void cvvTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvvTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cvvTextFieldActionPerformed
       /**
     * Maneja el evento del botón Pagar, realizando el pago según el método seleccionado y mostrando el resultado
     * @param evt El evento de acción
     */
    private void pagarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarButtonActionPerformed
        // TODO add your handling code here:
    
     StringBuilder errores = new StringBuilder(); // Para acumular mensajes de error
     double monto = 0; // Inicializar monto para manejar la excepción NumberFormatException

    try {
        monto = Double.parseDouble(montoTextField.getText());
        if (monto <= 0) {
            errores.append("El monto debe ser mayor que cero.\n");
        }
    } catch (NumberFormatException e) {
        errores.append("Ingrese un monto válido.\n");
    }

    try {
        String metodo = (String) metodoPagoComboBox.getSelectedItem();
        Pago pago = null;
        /**
         * se crean instancias de las clases concretas/**
         */
        switch (metodo) {
            case "Tarjeta" -> {
                String numeroTarjeta = null;
                String fechaVencimiento = null;
                String cvv = null;

                try {
                    numeroTarjeta = ValidadorDePago.validarNumeroTarjeta(numeroTarjetaTextField.getText());
                } catch (DatosInvalidosException e) {
                    errores.append(e.getMessage()).append("\n");
                }

                try {
                    fechaVencimiento = ValidadorDePago.validarFechaVencimiento(fechaVencimientoTextField.getText());
                } catch (DatosInvalidosException e) {
                    errores.append(e.getMessage()).append("\n");
                }

                try {
                    cvv = ValidadorDePago.validarCvv(cvvTextField.getText());
                } catch (DatosInvalidosException e) {
                    errores.append(e.getMessage()).append("\n");
                }

                if (errores.length() == 0 && monto > 0) { // Solo crear el objeto Pago si no hay errores y el monto es válido
                    pago = new PagoTarjeta(monto, numeroTarjeta, fechaVencimiento, cvv);
                }
             }
            case "PayPal" -> {
                String email = null;
                String password = null;

                try {
                    email = ValidadorDePago.validarEmail(emailTextField.getText());
                } catch (DatosInvalidosException e) {
                    errores.append(e.getMessage()).append("\n");
                }

                try {
                    password = ValidadorDePago.validarPassword(new String(passwordField.getPassword()));
                } catch (DatosInvalidosException e) {
                    errores.append(e.getMessage()).append("\n");
                }

                if (errores.length() == 0 && monto > 0) {
                    pago = new PagoPayPal(monto, email, password);
                }
             }
            case "Cripto" -> {
                String direccionCripto = null;

                try {
                    direccionCripto = ValidadorDePago.validarDireccionCripto(direccionCriptoTextField.getText());
                } catch (DatosInvalidosException e) {
                    errores.append(e.getMessage()).append("\n");
                }

                if (errores.length() == 0 && monto > 0) {
                    pago = new PagoCripto(monto, direccionCripto);
                }
             }
            default -> errores.append("Método de pago no válido.\n");
        }

        if (errores.length() > 0) {
            resultadoTextArea.setText(errores.toString()); 
            return; // No continuar si hay errores
        }
        /**
        *Se llama al método realizarPago() a través de la variable pago
        **/
        if (pago != null) {
            resultadoTextArea.setText(pago.realizarPago());
        }

    } catch (MontoInvalidoException e) {
        resultadoTextArea.setText(e.getMessage());
    } catch (Exception e) {
        resultadoTextArea.setText("Error inesperado: " + e.getMessage());
    }

    }//GEN-LAST:event_pagarButtonActionPerformed
    /**
     * Oculta todos los campos específicos de los métodos de pago
     */
    private void ocultarCamposEspecificos() {
        numeroTarjetaLabel.setVisible(false);
        numeroTarjetaTextField.setVisible(false);
        fechaVencimientoLabel.setVisible(false);
        fechaVencimientoTextField.setVisible(false);
        cvvLabel.setVisible(false);
        cvvTextField.setVisible(false);
        emailLabel.setVisible(false);
        emailTextField.setVisible(false);
        passwordLabel.setVisible(false);
        passwordField.setVisible(false);
        direccionCriptoLabel.setVisible(false);
        direccionCriptoTextField.setVisible(false);
    }
    /**
     * Muestra los campos específicos para el método de pago seleccionado
     */
    private void mostrarCamposEspecificos() {
        String metodoPago = metodoPagoComboBox.getSelectedItem().toString();
        ocultarCamposEspecificos(); // Oculta todos los campos primero
        switch (metodoPago) {
            case "Tarjeta" -> {
                numeroTarjetaLabel.setVisible(true);
                numeroTarjetaTextField.setVisible(true);
                fechaVencimientoLabel.setVisible(true);
                fechaVencimientoTextField.setVisible(true);
                cvvLabel.setVisible(true);
                cvvTextField.setVisible(true);
            }
            case "PayPal" -> {
                emailLabel.setVisible(true);
                emailTextField.setVisible(true);
                passwordLabel.setVisible(true);
                passwordField.setVisible(true);
            }
            case "Cripto" -> {
                direccionCriptoLabel.setVisible(true);
                direccionCriptoTextField.setVisible(true);
            }
            default -> {
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SistemaDePagosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SistemaDePagosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SistemaDePagosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaDePagosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SistemaDePagosGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cvvLabel;
    private javax.swing.JTextField cvvTextField;
    private javax.swing.JLabel direccionCriptoLabel;
    private javax.swing.JTextField direccionCriptoTextField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel fechaVencimientoLabel;
    private javax.swing.JTextField fechaVencimientoTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox<String> metodoPagoComboBox;
    private javax.swing.JTextField montoTextField;
    private javax.swing.JLabel numeroTarjetaLabel;
    private javax.swing.JTextField numeroTarjetaTextField;
    private javax.swing.JButton pagarButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextArea resultadoTextArea;
    // End of variables declaration//GEN-END:variables
}
