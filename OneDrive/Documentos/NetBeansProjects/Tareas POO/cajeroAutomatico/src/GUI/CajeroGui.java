/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import Excepciones.OperacionInvalidaException;
import Excepciones.SaldoInsuficienteException;
import cajero_automatico.CajeroAutomatico;


/**
 * Interfaz gráfica para el cajero automático
 * Permite realizar depósitos, retiros y consultar el saldo del cajero
 * 
 * @version 1.0
 * @author LUISA ARANGO
 */
public class CajeroGui extends javax.swing.JFrame {
    private CajeroAutomatico cajero;
    /**
     * Creates new form CajeroGui
     * 
     * Constructor de la clase CajeroGUI.
     * Crea una instancia del cajero
     * Muestra el saldo inicial 
     */
    public CajeroGui() {
        initComponents();
        cajero = new CajeroAutomatico(0.0); // Inicializa el cajero con saldo 0.0
        saldoInicial.setText("Saldo Inicial: $0.0"); // Muestra el saldo inicial
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        saldoInicial = new javax.swing.JLabel();
        Texto = new javax.swing.JTextField();
        DepositarButton1 = new javax.swing.JButton();
        RetirarButton2 = new javax.swing.JButton();
        ConsultarSaldoButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mensajeArea = new javax.swing.JTextArea();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        saldoInicial.setText("Saldo Inicial:");

        Texto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoActionPerformed(evt);
            }
        });

        DepositarButton1.setText("Depositar: ");
        DepositarButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepositarButton1ActionPerformed(evt);
            }
        });

        RetirarButton2.setText("Retirar:");
        RetirarButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetirarButton2ActionPerformed(evt);
            }
        });

        ConsultarSaldoButton3.setText("Consultar Saldo:");
        ConsultarSaldoButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarSaldoButton3ActionPerformed(evt);
            }
        });

        mensajeArea.setEditable(false);
        mensajeArea.setColumns(20);
        mensajeArea.setRows(5);
        jScrollPane1.setViewportView(mensajeArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(ConsultarSaldoButton3)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(saldoInicial))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(DepositarButton1)
                        .addGap(46, 46, 46)
                        .addComponent(RetirarButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(saldoInicial)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DepositarButton1)
                    .addComponent(RetirarButton2))
                .addGap(18, 18, 18)
                .addComponent(ConsultarSaldoButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    private void TextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoActionPerformed
    /**
    * Maneja el evento de depósito de dinero.
    * Intenta depositar la cantidad ingresada por el usuario y actualiza el saldo.
    * 
    * @param evt Evento de acción generado por el botón de depósito.
    */
    private void DepositarButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepositarButton1ActionPerformed
        // TODO add your handling code here:
        String cantidadTexto = Texto.getText();
        if (cantidadTexto.isEmpty()) {
        mensajeArea.append("Ingrese una cantidad antes de depositar.\n");
        return;
        }

        try {
        double cantidad = Double.parseDouble(cantidadTexto);
        cajero.depositar(cantidad);
        mensajeArea.append("Depósito de $" + cantidad + " realizado.\n");
    } catch (NumberFormatException ex) {
        mensajeArea.append("Cantidad inválida. Ingrese un valor numérico.\n");
    } catch (OperacionInvalidaException ex) {
        mensajeArea.append("Error: " + ex.getMessage() + "\n");
    }

    }//GEN-LAST:event_DepositarButton1ActionPerformed
        /**
    * Maneja el evento de consulta de saldo
    * 
    * @param evt Evento de acción generado por el botón de consulta de saldo
    */                                           
    private void ConsultarSaldoButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarSaldoButton3ActionPerformed
        // TODO add your handling code here:
         mensajeArea.append("Saldo actual: $" + cajero.consultarSaldo() + "\n");                                                   
    }//GEN-LAST:event_ConsultarSaldoButton3ActionPerformed
    /**
    * Maneja el evento de retiro de dinero.
    * Retira la cantidad ingresada por el usuario y actualiza el saldo
    * 
    * @param evt Evento de acción generado por el botón de retiro
    */
    private void RetirarButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetirarButton2ActionPerformed
        // TODO add your handling code here:
        String cantidadTexto = Texto.getText();
        if (cantidadTexto.isEmpty()) {
        mensajeArea.append("Ingrese una cantidad antes de retirar.\n");
        return;
        }

        try {
        double cantidad = Double.parseDouble(Texto.getText());
        cajero.retirar(cantidad);
        mensajeArea.append("Retiro de $" + cantidad + " realizado.\n");
    } catch (NumberFormatException ex) {
        mensajeArea.append("Cantidad inválida.\n");
    } catch (SaldoInsuficienteException | OperacionInvalidaException ex) {
        mensajeArea.append("Error: " + ex.getMessage() + "\n");
    }

    }//GEN-LAST:event_RetirarButton2ActionPerformed
    
    /**
     * Obtiene el campo de texto para ingresar la cantidad.
     *
     * @return El campo de texto.
     */
    public javax.swing.JTextField getTextField() {
        return Texto;
    }

    /**
     * Obtiene el área de texto para mostrar mensajes de error.
     *
     * @return El área de texto de error.
     */
    public javax.swing.JTextArea getErrorLabel() {
        return mensajeArea;
    }

    /**
     * Obtiene el botón de depósito.
     *
     * @return El botón de depósito.
     */
    public javax.swing.JButton getDepositarButton() {
        return DepositarButton1;
    }

    /**
     * Obtiene el botón de retiro.
     *
     * @return El botón de retiro.
     */
    public javax.swing.JButton getRetirarButton() {
        return RetirarButton2;
    }

    /**
     * Obtiene el JLabel para mostrar el saldo.
     *
     * @return El JLabel del saldo.
     */
    public javax.swing.JLabel getSaldoLabel() {
        return saldoInicial;
    }

    /**
     * Obtiene el botón para consultar el saldo.
     *
     * @return El botón para consultar el saldo.
     */
    public javax.swing.JButton getConsultarSaldoButton() {
        return ConsultarSaldoButton3;
    }
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConsultarSaldoButton3;
    private javax.swing.JButton DepositarButton1;
    private javax.swing.JButton RetirarButton2;
    private javax.swing.JTextField Texto;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mensajeArea;
    private javax.swing.JLabel saldoInicial;
    // End of variables declaration//GEN-END:variables
}
